version: "2"

volumes:
  pg_lib:
    external: false
  pg_header:
    external: false
  pg_extension:
    external: false

networks:
  pg_link:
    external: false

services:
  ans:
    container_name: "ipl_dev_deploy_ans"
    depends_on:
      - pg
    image: "ipl_dev_deploy_ans"
    # network_mode: host
    networks:
      - pg_link
    build:
      context: "$IPL_DEV_DEPLOY_ROOT/box/ans"
    command: up
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "$IPL_DEV_DEPLOY_ROOT/art/ans:/ansible"
      - "$IPL_DEV_DEPLOY_ROOT/box:/ansible/box"
      - "pg_lib:/ansible/art/pg/lib"
      - "pg_header:/ansible/art/pg/header"
      - "pg_extension:/ansible/art/pg/extension"

  pg_init:
    container_name: "ipl_dev_deploy_pg_init"
    image: "postgres:$IPL_DEV_DEPLOY_PG_VERSION-alpine"
    user: postgres
    volumes:
      - "$IPL_DEV_DEPLOY_ROOT/vol/pg:$IPL_DEV_DEPLOY_PG_DATA:rw"
    environment:
      PGDATA: $IPL_DEV_DEPLOY_PG_DATA
    command: pg_ctl stop -m i
  pg_data_chown:
    container_name: "ipl_dev_deploy_pg_data_chown"
    depends_on:
      - pg_init
    image: bash
    command: "chown -R $IPL_DEV_DEPLOY_HOST_UID:$IPL_DEV_DEPLOY_HOST_GUID $IPL_DEV_DEPLOY_PG_DATA"
    volumes:
      - "/etc/passwd:/etc/passwd:ro"
      - "$IPL_DEV_DEPLOY_ROOT/vol/pg:$IPL_DEV_DEPLOY_PG_DATA:rw"
  pg:
    container_name: "ipl_dev_deploy_pg"
    depends_on:
      - pg_data_chown
    image: "postgres:${IPL_DEV_DEPLOY_PG_VERSION}-alpine"
    user: $IPL_DEV_DEPLOY_HOST_UID:$IPL_DEV_DEPLOY_HOST_GUID
    networks:
      - pg_link
    ports:
      - '5432:5432'
    volumes:
      - "/etc/passwd:/etc/passwd:ro"
      - "$IPL_DEV_DEPLOY_ROOT/vol/pg:$IPL_DEV_DEPLOY_PG_DATA:rw"
      - "pg_lib:/usr/local/lib/postgresql"
      - "pg_header:/usr/local/include/postgresql/server"
      - "pg_extension:/usr/local/share/postgresql/extension"
    environment:
      POSTGRES_USER: $IPL_DEV_DEPLOY_PG_USER
      POSTGRES_PASSWORD: $IPL_DEV_DEPLOY_PG_PASSWORD
      PGDATA: $IPL_DEV_DEPLOY_PG_DATA