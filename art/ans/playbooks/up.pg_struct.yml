#!/usr/bin/env ansible-playbook
# up.pg_struct_n_data.yml
# заботится о создании структуры необходимых баз и наполнении их фикстурами

---


- hosts: local
  become: true
  gather_facts: false
  vars:
    # чтобы лукапами не повторяться
    GITLAB_URL: "{{ lookup('env', 'IPL_DEV_DEPLOY_GITLAB_URL') }}"
    GITLAB_PATH_API: "{{ lookup('env', 'IPL_DEV_DEPLOY_GITLAB_PATH_API') }}"
    PG_USER: "{{ lookup('env', 'IPL_DEV_DEPLOY_PG_USER') }}"
    PG_PASSWORD: "{{ lookup('env', 'IPL_DEV_DEPLOY_PG_PASSWORD') }}"
  tasks:
    - name: Create "api" database
    # создаёт пустую базу
      postgresql_db:
        name: api
        login_host: ipl_dev_deploy_pg
        login_user: '{{ PG_USER }}'
        login_password: '{{ PG_PASSWORD }}'
        port: 5432
    - name: Clone "api" data migrations
    # забирает миграции из репозитория
      git:
        repo: "git@{{ GITLAB_URL }}:{{ GITLAB_PATH_API }}.git"
        dest: /ansible/migrations/api
        clone: yes
        accept_hostkey: yes
    - name: Apply "api" data migrations
    # применяет миграции с помощью специально обученной утилиты
      shell: |
        ipmt up
      args:
        chdir: /ansible/migrations/api
      environment:
        IPMT_DSN: "{{ PG_USER }}:{{ PG_PASSWORD }}@ipl_dev_deploy_pg:5432/api"
